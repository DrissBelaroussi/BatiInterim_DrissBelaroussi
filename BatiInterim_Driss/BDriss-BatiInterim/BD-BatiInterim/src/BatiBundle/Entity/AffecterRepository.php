<?php

namespace BatiBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AffecterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AffecterRepository extends EntityRepository
{
    public function getAffectChantier($idChantier){
        
        $affect = $this->createQueryBuilder('a')                
                ->innerJoin('a.idmission', 'm')
                ->andWhere('m.idchantier = :idchantier')
                ->setParameter('idchantier', $idChantier)               
                ->getQuery()
                ->getResult();

        if ($affect) {

            return $affect;
        } else {
            return null;
        }
    }
    
    public function getAffectArtisan($idArtisan){
        $affect = $this->createQueryBuilder('a')                
                ->innerJoin('a.idmission', 'm')
                ->andWhere('m.idartisan = :idartisan')
                ->setParameter('idartisan', $idArtisan)               
                ->getQuery()
                ->getResult();

        if ($affect) {

            return $affect;
        } else {
            return null;
        }
    
    }
    
    public function getAffectDate($date){
        
         $affect = $this->createQueryBuilder('a')                
                ->innerJoin('a.idmission', 'm')
                ->andWhere('m.datedebut <= :date')
                ->andWhere('m.datefin >= :date')
                ->setParameter('date', $date)               
                ->getQuery()
                ->getResult();

        if ($affect) {

            return $affect;
        } else {
            return null;
        }
     
    }
    
    public function isMission($dateDebut , $dateFin , $idArtisan){
        
         $affect = $this->createQueryBuilder('a')                
                ->innerJoin('a.idmission', 'm')
                ->where(':datedebut BETWEEN m.datedebut AND m.datefin')
                ->andWhere('a.idartisan >= :idartisan')
                 
                ->orWhere(':datefin BETWEEN m.datedebut AND m.datefin')
                ->andWhere('a.idartisan >= :idartisan')
                 
                ->orWhere(' m.datedebut BETWEEN :datedebut AND :datefin')
                ->andWhere(' m.datefin BETWEEN :datedebut AND :datefin')
                ->andWhere('a.idartisan >= :idartisan')
                 
               ->setParameter('datefin', $dateFin)
                ->setParameter('datedebut', $dateDebut)
                ->setParameter('idartisan', $idArtisan)               
                ->getQuery()
                ->getResult();    

        if ($affect) {

            return true;
        } else {
            return false;
        }
     
    }
    
     public function supprimerAffect($id){
        $query = $this->_em->createQuery('delete from BatiBundle:Affecter a where a.id =:id')
                ->setParameter('id', $id);
        
        $result = $query->execute();
        return $result;
    }
    
    public function supprimerAffectArtisan($id){
        $query = $this->_em->createQuery('delete from BatiBundle:Affecter a where a.idartisan =:id')
                ->setParameter('id', $id);
        
        $result = $query->execute();
        return $result;
    }
    
     
    
    
    
        
    
    
}
